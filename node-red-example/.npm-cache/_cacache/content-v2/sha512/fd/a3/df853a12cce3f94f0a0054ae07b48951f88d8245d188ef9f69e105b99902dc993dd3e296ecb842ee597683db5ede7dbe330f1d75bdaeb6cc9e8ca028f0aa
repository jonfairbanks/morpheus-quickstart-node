{"_id":"node-red-node-test-helper","_rev":"26-ac003a2a2ecb15e6d7533bf2ea8938b1","time":{"0.1.0":"2018-02-16T00:52:38.053Z","created":"2018-02-17T16:20:29.910Z","0.1.1":"2018-02-17T16:20:29.972Z","modified":"2024-05-03T11:02:21.327Z","0.1.2":"2018-02-17T16:40:55.569Z","0.1.3":"2018-02-22T22:36:54.170Z","0.1.4":"2018-02-22T23:59:16.104Z","0.1.5":"2018-03-02T04:26:54.798Z","0.1.6":"2018-04-16T22:48:46.933Z","0.1.7":"2018-05-04T16:49:04.106Z","0.1.8":"2018-05-25T20:39:38.568Z","0.2.0":"2019-03-21T21:01:11.863Z","0.2.1":"2019-03-23T23:27:57.390Z","0.2.2":"2019-03-25T21:17:06.914Z","0.2.3":"2019-07-09T10:13:20.980Z","0.2.4":"2020-05-22T20:05:08.874Z","0.2.5":"2020-05-27T11:16:39.911Z","0.2.6":"2021-02-01T21:08:52.166Z","0.2.7":"2021-02-13T00:14:57.705Z","0.3.0":"2022-06-21T08:38:34.813Z","0.3.1":"2023-04-28T20:41:40.590Z","0.3.2":"2023-06-23T00:20:49.027Z","0.3.3":"2023-12-22T14:59:09.524Z","0.3.4-debug":"2024-03-21T20:20:38.390Z","0.3.4":"2024-05-03T11:02:21.100Z"},"name":"node-red-node-test-helper","dist-tags":{"latest":"0.3.4","debug":"0.3.4-debug"},"versions":{"0.1.1":{"name":"node-red-node-test-helper","version":"0.1.1","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha 'test/**/*_spec.js'"},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.2","node-red":"0.18.3","mocha":"~3.4.2","should":"^8.4.0","sinon":"1.17.7","supertest":"3.0.0"},"devDependencies":{"hash-sum":"1.0.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"}],"keywords":["test","iot","node"],"engines":{"node":">=4"},"gitHead":"432db9c9e347b3ff9ba7a6a55f3b1df53ec62e38","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.1.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.3","_npmUser":{"name":"mblackstock","email":"mike@mblackstock.com"},"dist":{"integrity":"sha512-8cYnW0xVHM5ZOmtD/Aw9BZ8D0Fdh9WhfHSIObruV9cG0y8ygZzbdvc98m7h1iK9AhSvZJooUs26sHU9Kflv9hg==","shasum":"2dbc4a95ad4db8fc6fd32b6a9c72090453e72cd5","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.1.1.tgz","fileCount":16,"unpackedSize":121059,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDBiKbX3hkWuUGHbEg3fEm/G8hr3tY4CXLgYiCyIRCyJgIgTfHDKYd6WmV50J6iWspW6POY87XNwDo0IcSHETKMxTg="}]},"maintainers":[{"name":"mblackstock","email":"mike@mblackstock.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.1.1_1518884429911_0.9047848741848032"},"_hasShrinkwrap":false},"0.1.2":{"name":"node-red-node-test-helper","version":"0.1.2","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha 'test/**/*_spec.js'"},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.2","node-red":"0.18.3","mocha":"~3.4.2","should":"^8.4.0","sinon":"1.17.7","supertest":"3.0.0"},"devDependencies":{"hash-sum":"1.0.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"}],"keywords":["test","iot","node"],"engines":{"node":">=4"},"gitHead":"27e290346856d897ead40fb7e596369bf2bbd86b","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.1.2","_npmVersion":"5.6.0","_nodeVersion":"8.9.3","_npmUser":{"name":"mblackstock","email":"mike@mblackstock.com"},"dist":{"integrity":"sha512-LkAfFfUpxzJjd7egBnueAJIEhiiTwRw97pvq08yHLwoj06LGGX0m6EE/RGYaH0+ZTx3sqGh/HPcQYS4qazSecQ==","shasum":"0ea6d7a55f8eda1507eaa95e24218a0936eb19ad","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.1.2.tgz","fileCount":16,"unpackedSize":121047,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDef86b+zouMJI+qphtwc4ya3Bsx61Gsonq+EzZb9QYHAiAI6cTJudOfTpBN/bLaG1T4IhxRJtBqe3mp29p1lvMdKQ=="}]},"maintainers":[{"name":"mblackstock","email":"mike@mblackstock.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.1.2_1518885655513_0.36210562318113104"},"_hasShrinkwrap":false},"0.1.3":{"name":"node-red-node-test-helper","version":"0.1.3","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha 'test/**/*_spec.js'"},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.2","node-red":"0.18.3","mocha":"~3.4.2","should":"^8.4.0","sinon":"1.17.7","supertest":"3.0.0"},"devDependencies":{"hash-sum":"1.0.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"}],"keywords":["test","iot","node"],"engines":{"node":">=4"},"gitHead":"2e485ac93af053fc4f5e2fec847d7016ae3b32f2","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.1.3","_npmVersion":"5.6.0","_nodeVersion":"8.9.3","_npmUser":{"name":"mblackstock","email":"mike@mblackstock.com"},"dist":{"integrity":"sha512-NhJ+XGCoIMXQ7+xwd211bpUsJUCiRaw2w848Egz5cruGHlPjWPu4G160uEmKDkFEqhZFESq+7sUNRt//gAmdaA==","shasum":"626d537f0fda968340d2e4331f0fa2afce0f43ae","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.1.3.tgz","fileCount":16,"unpackedSize":124843,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIH6k2BGI1meznO5EsYhlL1nZ71z5ut2MahXIyTjqWkxfAiBjJgeH5mSekPgrDZRqmcrOua2AX2Y0hjbfsyZms7TYXA=="}]},"maintainers":[{"name":"mblackstock","email":"mike@mblackstock.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.1.3_1519339014122_0.20868019115711145"},"_hasShrinkwrap":false},"0.1.4":{"name":"node-red-node-test-helper","version":"0.1.4","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha 'test/**/*_spec.js'"},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.2","node-red":"0.18.3","mocha":"~3.4.2","should":"^8.4.0","sinon":"1.17.7","supertest":"3.0.0"},"devDependencies":{"hash-sum":"1.0.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"}],"keywords":["test","iot","node"],"engines":{"node":">=4"},"gitHead":"318a504819fdba9314c8ab2e6bbaf06f36b47341","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.1.4","_npmVersion":"5.6.0","_nodeVersion":"8.9.3","_npmUser":{"name":"mblackstock","email":"mike@mblackstock.com"},"dist":{"integrity":"sha512-/JEqc62XqL4XJE7ckrxVKpVHitNqUF7Zn1xkSN0teIoyek9UyfI9Zrm8vLfQJ9+I66FKMEaJt4P7dIFjSy6NNw==","shasum":"b822c56044db55f3d7ef3733e55ce4096288bd0c","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.1.4.tgz","fileCount":16,"unpackedSize":124817,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAqBiMEslz4k9843tLNDefZZEPCD0O0DSX6+sKi7fvc/AiEAvV+bzgz8MyB7IHdfDvtEuGYHhcVNmeXWv3YbZmxlFfU="}]},"maintainers":[{"name":"mblackstock","email":"mike@mblackstock.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.1.4_1519343956048_0.6453361100515038"},"_hasShrinkwrap":false},"0.1.5":{"name":"node-red-node-test-helper","version":"0.1.5","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha 'test/**/*_spec.js'"},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.2","mocha":"~3.4.2","should":"^8.4.0","sinon":"1.17.7","supertest":"3.0.0","when":"3.7.8"},"devDependencies":{"hash-sum":"1.0.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node"],"engines":{"node":">=4"},"gitHead":"d2508ca3c3b85cdc11291c9f157440f0f7d04576","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.1.5","_npmVersion":"5.6.0","_nodeVersion":"8.9.3","_npmUser":{"name":"mblackstock","email":"mike@mblackstock.com"},"dist":{"integrity":"sha512-uPLlezIZhDmt6upDQeQGP5072eh/eFZDMtK6lxO+DmAxDAB0IX/0HRT3JFnlnm+NTYUbe4nFvPMTSDBE05VfzA==","shasum":"002d692904a11e7012e7cd58b0ace94702a19259","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.1.5.tgz","fileCount":12,"unpackedSize":62983,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCI4Juu1RXWiuYc/l1l80jUC2I7eBvQ8GLGfWeI+uk2MAIhAIMdyCa+PWz8pP4QTiEGqcRGSct4jw6UlUq1xm6beYv8"}]},"maintainers":[{"name":"mblackstock","email":"mike@mblackstock.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.1.5_1519964814740_0.2582807752044731"},"_hasShrinkwrap":false},"0.1.6":{"name":"node-red-node-test-helper","version":"0.1.6","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.2","read-pkg-up":"3.0.0","should":"8.4.0","sinon":"1.17.7","stoppable":"1.0.6","supertest":"3.0.0","when":"3.7.8"},"peerDependencies":{"node-red":"~0.18.4"},"devDependencies":{"mocha":"~5.0.4"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node"],"engines":{"node":">=4"},"gitHead":"c8b1c6f18964122dbaa7956f5cb759f366fcd82b","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.1.6","_npmVersion":"5.8.0","_nodeVersion":"8.9.3","_npmUser":{"name":"mblackstock","email":"mike@mblackstock.com"},"dist":{"integrity":"sha512-N+5261LE/9aSvd8jwIh7bxUpjYefaje4T9esYGdagoeiRlBiE7PhGCJtUUzesATdnaX5ZCItQg41bqzmS2xaOA==","shasum":"9fedf8bfdb112f8b0704c9a4c05fe472c50cc484","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.1.6.tgz","fileCount":12,"unpackedSize":62207,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa1ShQCRA9TVsSAnZWagAAX0IP/3r+/sYIaimWGH1LBeXy\nV8fUFToRF8wUNP+kZHQ9oQRTEJv33LQ0LHDs0SQ+PBZcMx7YSktRXna93Aba\nqtrL7uH0z5/AFn8PhQb6iUTrnkT6u2vEYxbsoTfnjwPIIKzX8AcuKVILwK/q\n90RxXEY9lJRQz+vjTU3srLaMSvB14xAOWWUyXM8Kr9NHj7SslB/rWc2MZzQL\ns31VGtXn5EAMZ5LFZJOEz56evGcSQ7lcByl3vZlMaHSeqYp9c1Yyl+qUiDtd\nmSUoMLW11lKY0JcZPQlud8ZUsqLHJlDH9YOpGA/NJGeC83wAf7Rzm61c84ot\noV+iUWMbg7YKdbu5cnrIX8JHogt32hphAPIxqqJJ1UpXNZF+myeizecXKaSt\nC6ZDDOxO5l9Dtuxt1RYLa6Iv0rs4xnFdR7ajhMmJthOPrrzI1XP/JbYKXx0l\nIqciaFJUJp4KviuLBa7l5ti7VNbDHpSDg/Peas0WgN1ww9pdUF60XIhoAML5\nxp/3TZU6TDCC8LCmAVX4us/Ax5NcizqI2Irw1l0ANOJFgb21zB+D2aoJT/ft\npNB38fHfzK3gswFhRo4yluGqbHLiH4Tp9LyYt5JHgxNhfZsi+5jpZ3ZhEgVZ\nxjXo+A/OBGaeB4uR4WtldsZe/IbZqtdzOkP/AQid4Lg68LM89+I/zF5SF7c6\nGMh+\r\n=Vh48\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCXi3a4JTxJpxudZ2mYn7XVqXi9NrGuOTJvvcQZE7aOJAIgXsuFHbj06gDup3AJ91ZGeoraj+m6IZ4U97YKpUXFt1M="}]},"maintainers":[{"name":"mblackstock","email":"mike@mblackstock.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.1.6_1523918926815_0.8367267472040083"},"_hasShrinkwrap":false},"0.1.7":{"name":"node-red-node-test-helper","version":"0.1.7","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.2","read-pkg-up":"3.0.0","should":"8.4.0","sinon":"1.17.7","stoppable":"1.0.6","supertest":"3.0.0","when":"3.7.8"},"peerDependencies":{"node-red":"~0.18.4"},"devDependencies":{"mocha":"~5.0.4"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node"],"engines":{"node":">=4"},"gitHead":"508b7952cd010415789059880c8f336372468c42","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.1.7","_npmVersion":"5.8.0","_nodeVersion":"8.9.3","_npmUser":{"name":"mblackstock","email":"mike@mblackstock.com"},"dist":{"integrity":"sha512-TIdWnxyh1auUonrCpyEyLTCGgJIAaVSvhVQia2WWuUfYXhQuXohir/I44KdyLwxAV06q6lPTomkZ/so3tn55UA==","shasum":"a2c67abb2c3a7180e4fbd5d776324e20233bec4a","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.1.7.tgz","fileCount":12,"unpackedSize":62749,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa7I8BCRA9TVsSAnZWagAAzuIP/RmZwrgsOuGeL9F4mlPy\nWsS0Ra7xcG4NpCcfm2U3xBg3E30GFYTmmZVmHAJ7kY5hk0i3YmWnQOb2pKz5\nzSZqF9LYtFtHywalYfS7zpTmsW+tiD8DDwFIjx+0UpX8XCy+Zc+EJ5uqZT/8\nS7VE/K7oOyugI4alP/LfBDvrqQ9h1NmF9tuUIwkOS2Ed2KVTC1T9t23mSJb6\nnpb9gSWVoZ0eWyVHn5x1Amm6GBt7yYWQ+dOukLMIwa483uc25H9hJ93FN9k4\nHwJDxQZ8XKlcpTCZoklGO1dRDTNPk8hzM+xIqBzYB9sKRKkAIo8GvmRGSKfJ\ngkbHSmRgwMwhsKlyks0m8Dg9NCnbT6TV2tzqZGQEiIjmyUsuvvTwBEJuTM3L\nCyt+sbwV5ag0Im7ks6Bdzcbogb1KaQ0t/ZTZhACZ5ZvjSaU8uRTwfp9FyzWr\nHxQzp0luzdGBNpJMmTROJbx+RpzaufzdB7yZhZUZCyTbaOlSSkCbZ9GdCsub\n9dRWaqsTHwwDb9pmegp8Hkx1lWUoIEbKS6d7BJJuB/6pGLYbZHntfxG9U6a+\n1+RDSTB3oDlRbHXld4fqkWGIZ/oRJlTjaR4ugpS73rI5Yx5qY3+bbQqM48LX\nGdpK2zg0uU4DDZMdAp4y2/yasjUU0CgC9ocIaI3lkbjAj8lmQDArpZwsC4IY\nklar\r\n=TEwr\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCU5sDNUPKnPIs7bhkFh7YiNdgM/F2lQ5BDUWCnbpSmhQIhAMnGDOF2IrvqCUMU7/JBEB/OY4Jrruj+Xp+xFvwt2FDm"}]},"maintainers":[{"name":"mblackstock","email":"mike@mblackstock.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.1.7_1525452544002_0.7760134250002049"},"_hasShrinkwrap":false},"0.1.8":{"name":"node-red-node-test-helper","version":"0.1.8","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.2","read-pkg-up":"3.0.0","should":"8.4.0","sinon":"1.17.7","stoppable":"1.0.6","supertest":"3.0.0","when":"3.7.8"},"peerDependencies":{"node-red":"~0.18.4"},"devDependencies":{"mocha":"~5.0.4"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node"],"engines":{"node":">=4"},"gitHead":"8880b04b8ab37ba5bcb31e6e9d40347a55af5149","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.1.8","_npmVersion":"5.8.0","_nodeVersion":"8.9.3","_npmUser":{"name":"mblackstock","email":"mike@mblackstock.com"},"dist":{"integrity":"sha512-2pDhiwiMjwu6WvRc0nM5xwqfjx0UeCJ7mSmjJdL64GhAHkujj6I2S90qOx7rROWo81/0w0KNplSft4kDhgZBIQ==","shasum":"6aad1b48cd3f23ed13e7cdb4b95f3d0523cb4bdc","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.1.8.tgz","fileCount":12,"unpackedSize":63321,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbCHSLCRA9TVsSAnZWagAA7AIQAIBwbxZwkpeU9BPTcqKn\n4ecbjP1tCN7Pt4udqvlJDXTZIHdzVvLaRyZyLlc9cHQ7QVGXqJhYJKzBWjc4\n/kytYE7Q1Wqp88MJFNjcSxDvEhTWu5lytbMzYZgeP0QroJ348ZYAAidfMmfa\nLfRrbTUyxoQb76EuYuRHFXaGW8XsMp5d0YPvKSINa+vGiMPYy1AerWdyc0Rp\nWNxjDeZUnwZyHVy4oAyO2LYurrjYklnbMyAuHbymcyearWv89pEuGG5CqpQp\nYDwLw0GCQFysMPb+VVZeHbYqhRwHhiPIKM56ZGCX6stqO0Z4jW8E73RZ4uOa\nCI0F1EbAjj3ebSC/sW3Os1WuynbSmS32pjcHQX15r9GjLNbLC3RmZwig6PsR\nJjS/EblChCjdeeGeO5WaTUB3JVkZD6XAuS8veZQt1urkKidOXKQFPEc/p/dF\nnYs3EEbTZCK//WS9aOYeWqcSBJjnVbWVjYx4e5amSUqD1iCxQySkO7yiB8JD\nhmreIUH1XOrRkML7Z8ZOAEsjXazr9eSRCNm1si4QyEtzXyZ8cRepu5cFPD7m\nNSAO75PoHg1V39Ca5U6iofd9YD4bbSoOZQuoGN2qKv/xOBq4bWiGTg1N48my\nAW83rfGxKztx7aIsqP6vatVPbUFYMZLm9MFKpBbmSSMEW5rbjQH0RwLdJFfp\nQQ1m\r\n=m0UE\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIG7o+XSACHyRBoFM0iyb8aR5FtTOste1Aqh5iKeIoEMXAiEA+TQgBLcbK7ZYDY4nRU2IDRE0VmpXtrV5DD5yQVTWc4M="}]},"maintainers":[{"name":"mblackstock","email":"mike@mblackstock.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.1.8_1527280778493_0.18285593944828848"},"_hasShrinkwrap":false},"0.2.0":{"name":"node-red-node-test-helper","version":"0.2.0","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.4","read-pkg-up":"3.0.0","semver":"5.6.0","should":"^13.2.1","should-sinon":"0.0.6","sinon":"5.0.3","stoppable":"1.1.0","supertest":"3.0.0","when":"3.7.8"},"peerDependencies":{"node-red":"~0.20.0"},"devDependencies":{"mocha":"~5.0.4"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node"],"engines":{"node":">=8"},"gitHead":"f3cc9ea343df1660b224123cbc2b2e9e56165dc6","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.2.0","_npmVersion":"6.4.1","_nodeVersion":"8.14.0","_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"dist":{"integrity":"sha512-FKmKxc4AKTcYHFJDFhjk+NADoxB3IjaEaymwPTYU+t1jVkdnPAfYjl+7Z7XdBH38DTQ5H1zYYx5IAUMXgGGHIA==","shasum":"ea34f4910b4ec38b13b9c01472e903b799d67bfc","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.2.0.tgz","fileCount":12,"unpackedSize":72163,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJck/uYCRA9TVsSAnZWagAAMZsP/0n0SnIW6+wW2w6MY//T\nBlN/Pi+hir5sttF8xIY0EZnoTFhv8+FJOwCIPg/21bU8Bj+UXGnhbGISU9aT\n3YlZTMpKpaxJeHJI/fgAm6TWBSlzfMyFDJeMLxB+t2K172GwyI1QF3Y1N0ph\nk8RQkloSeegDmVPmpt1Ix6A9t0YqZgfQ9xgsNkfXmhcCw/MOzqHZ4z3ihYen\nFVPAYYRgqKKNdKOCalriUL4R4BaqBHZD9dRQ5dV+nGZcbO2paujwjjFHEqly\nGgPBH7kqa4Th6DiuxXqzaaaYuqOaNdk1N7YEoVKbE2VpJbGL+of/hJqUCmFD\ni5vQa5WR/8eJmgUJMlcL1ZSqpLl8oq8L6vJE1lx6Fh5inJ/QNlw3+xOifKAD\nU47v64Wd5ap+te/T59COY0Sh3UeyTd8BGfy5k3QVzo9M2pajpXYnINPJ2ICN\nUNg5Fr18j0UxPPoM35Ci2TMnbbuQZwFcyvVaYxhTzE3328zGlZPpu3EynWEq\nLOUBhTF9q3aNO/a9aCzWBEjSHceqq9ciIvG2Io8YDpECXKnWc+zf6sWyBXdr\nopngUkTez3aVL6qkE96/BLhJr0uFD76emPUDYxAKupVvbUUIjIG/UOU78xs5\nV/LJBRrFlFjr2X80g1EHjJpiq/0CmLqbh88bGgrRpGu91cUH27b3Iqa1v07g\nFiaC\r\n=Xcz7\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD0EhLYvnJdasaXxY77CqjN1xvIPkbnTOAC45jloHfHqgIgNhgGE7uE/NRXxeFYSsUZCLeWxpoQPJkuOJkOGZpt2so="}]},"maintainers":[{"email":"nick.oleary@gmail.com","name":"knolleary"},{"email":"mike@mblackstock.com","name":"mblackstock"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.2.0_1553202071740_0.08063685796822506"},"_hasShrinkwrap":false},"0.2.1":{"name":"node-red-node-test-helper","version":"0.2.1","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.4","read-pkg-up":"3.0.0","semver":"5.6.0","should":"^13.2.1","should-sinon":"0.0.6","sinon":"5.0.3","stoppable":"1.1.0","supertest":"3.0.0"},"peerDependencies":{"node-red":"~0.20.0"},"devDependencies":{"mocha":"~5.0.4"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node"],"engines":{"node":">=8"},"gitHead":"b400840e8be130d21e84855d6cc8f9e1e078295d","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.2.1","_npmVersion":"6.4.1","_nodeVersion":"8.14.0","_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"dist":{"integrity":"sha512-7DkzG6QROdXrdXpGqNqbn4zo/D3mtTwTQyNFsmpRLwslFhst5P0BXzwMbyLKoHMrqB7nETMDJ/MivA0mLswALg==","shasum":"ceb40b644776ce4de7782370af700d906821200a","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.2.1.tgz","fileCount":12,"unpackedSize":72462,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJclsD9CRA9TVsSAnZWagAAgHsP/RTUfMgGUqSbGEmCCOmS\npbWZT3gUtRDp4sNnZuEYf+ySVem62eYunGiu2Le1jM7FCBljETW5sDyZepRW\nd1AfhPk1KCrYbUw1tdn9FDw4VPGfMJpAQqpBY5GhTqaTChmz9UYhN4vLK6D+\nJoq8rbu0WEKem8Wll+oTQMua5QX8JKY/0t+riGrjLZpTN+KxsFwhuhHk/d+x\nRSZoshgT+a/qThEKX7TD08SYQAxQLT9wHYrwfPX5cxhAOV5dVO+PjZBvVleO\nLr2Rd1+M9ppftvKFR0nbB+65YWvaOFTMv2kKivqOT64AE/q88YnhPTGWTmYr\n48SW+of9knEdW200y9ove6IyxOY2auGBJlLIzAxm3mPWopGrg9ebOujpLep6\n7QmTR3QJ4M7hjIjbXXLTpuUe2lwrchFXNEOKMoE0LUZGOqqLncTPKdttya1l\nLLVHCN1zr5DZW+FLt4owmNfa0By64Ettu/SmsHgUZcb3jcLkIPARjNEBaRvE\nY2VslEICIaGBnDoah2m2R947/B1LTPZEP5Ei6qKDUYgtc2DJFG1FK1zgLmBc\n11yVL6C4nE0bTNDAlAM0YLMW7pJmOjKwaFOgeqyyi+qNa4v+bc+RAnsiPMwy\nNC9KqcPqmXXgbn3T3Eb1d19cgUpajPFpnmTu/wHzXKljw2TfPRynXC70L9Ll\n0vbE\r\n=CTF2\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQChShuFo/x1AaGDFkPUQpYVxV0qKz8ySGC6WZM2yI/EbgIgVELAYwyWZM+58PqhY81kbyiz2TJvDVMiGmoGlFy+hW4="}]},"maintainers":[{"email":"nick.oleary@gmail.com","name":"knolleary"},{"email":"mike@mblackstock.com","name":"mblackstock"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.2.1_1553383677272_0.17079260528245999"},"_hasShrinkwrap":false},"0.2.2":{"name":"node-red-node-test-helper","version":"0.2.2","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.16.4","read-pkg-up":"3.0.0","semver":"5.6.0","should":"^13.2.1","should-sinon":"0.0.6","sinon":"5.0.3","stoppable":"1.1.0","supertest":"3.0.0"},"peerDependencies":{"node-red":"~0.20.0"},"devDependencies":{"mocha":"~5.0.4"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node"],"engines":{"node":">=8"},"gitHead":"d6695c2de7968364c624f743ca38b13a0b859558","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.2.2","_npmVersion":"6.4.1","_nodeVersion":"8.14.0","_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"dist":{"integrity":"sha512-jC5/FGIRApvi0rzM/0FxIaCSC1I8bg9BWIDmTk4jFpczCFwuuZmitUZ/HxYZvKMXrO6wdySo/1ftOD6Gu7SgrQ==","shasum":"a3ab25882ba7117de82aadf703fc5cea66f57a86","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.2.2.tgz","fileCount":12,"unpackedSize":72974,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcmUVTCRA9TVsSAnZWagAA4FQP/1l07xyUf+sG5Tc7JLys\nVJ4IUpalKFpAaANwUyHzsFd9BY5ISnSAGdBXQeL6IONMlIJFN7wu7YYxrbw4\nL+1ze7ExMRSBvnF+g0WiLklTQBJL4Qs5Dbfg4lc1ZWhZj3izBmyYJ+5IM7E8\nmAl7Wo34lsNIiHCJhC0SAHD2qMPTv7+P4BABHn9EikVfr5Oai1iG2XLAPSxN\n7nqdOXyuSpdUNx0Tw39EqPusZwMUVqEQY7sbASi+odo1B+WY92iLOw6AjzzR\n2Uhp/s5MvMXfbxDcDTfoIs6J02U+wLgviEbXtE4k3frpRBFycuTTYMiAcdni\n+eXhbono4QgXbEKuhFHxkwmyDQqluFlh6f3LIDhBMe4dL4PLb6i+eC1VdG5D\nEMm5LiS4+hR+ZM8UQ5+rYcqx7RNxZ4TrQLASay8bi8ftYcGf9FZr+LpihTA4\nzYNYpJKEwmgh72uy9+J/zlJE2DqkETyn95ckXni+lt6zrNjXqt5OrZkb0HC2\nbz3swisgYVRvQW+IGfT2SG+EeZpOgtxEf/YMwslK11VVkMv88iD3nLm0WTpj\n68/I4QMvkUk4NvD6QuEo+rEoHo4TLbY4YATDIndePzG/GrL6KG1kqJuDED1U\n82qC2K/LiOLgRGys24wRcTiFQpXQW6IpPOTzJKzyrCWUc2onC9N6ktw3q5Hg\nhSNz\r\n=4j+L\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICNTiGZWQqfmLk+SG+xqmxUYeLNyIR5PLxQKuenZ8eKYAiEAhWjINxoY/DU3J+SiEtGztSIMvkqbsFRMKLlQVIzEhQI="}]},"maintainers":[{"email":"nick.oleary@gmail.com","name":"knolleary"},{"email":"mike@mblackstock.com","name":"mblackstock"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.2.2_1553548626801_0.1644138520437075"},"_hasShrinkwrap":false},"0.2.3":{"name":"node-red-node-test-helper","version":"0.2.3","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.17.1","read-pkg-up":"3.0.0","semver":"6.2.0","should":"^13.2.3","should-sinon":"0.0.6","sinon":"5.0.3","stoppable":"1.1.0","supertest":"3.0.0"},"peerDependencies":{"node-red":"~0.20.0"},"devDependencies":{"mocha":"~5.0.5"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node"],"engines":{"node":">=8"},"gitHead":"fefc9ace7fa82420fd5c550a3d7bd3123d7c9a27","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.2.3","_npmVersion":"6.4.1","_nodeVersion":"8.14.0","_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"dist":{"integrity":"sha512-N9/Fcrmbco3TSJNyLriM3L7tRd14nSjMQAseo2sgMaJi1rS+2+wXc8ka2RFYYH8EqI2MEeYbS2GPa+kfXEdrUg==","shasum":"2c8490af00730adf3532a87f283f6d4be286332a","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.2.3.tgz","fileCount":14,"unpackedSize":76824,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdJGjBCRA9TVsSAnZWagAALg0P/R3G1jkR7/nYUhv0F2dl\nPKGEgcUNUZmwUcGO8ZxK4YiGAtYAi2pR54itmGO2wTmiv6Bn19KVEMqwGtw1\nzO/3q65EHCnx9sBD0vUlyOrGecp2pArj5OcW8S5KbvPsgRH751kVbL6iTqhQ\nvSgELmWVoVMDJcb90h5yes3NVwLVvF9vekb1P5OoIh9RzAeu7dQf1bmKiKLX\nxpsM8QR52QfG4cl2RhhGmNjlaOn0O+OKtA1asHBw9LNCPAqSfhrZEFV4GIeR\n3w12UpOZy4zkuB3/DWQotHib71/0x0+uMODhAKKX6IRH/h5JWiHVb6MQukWN\nxDPpzbAI8ka6wrR0VAltUo3qFyF0X1adGZqWutboTfSREHjtvpD8MkQx2FL4\nHNBY+zSw7xoHi+fliFC9k2IKBdowXXl2osHfsJmIS3i1zpYnlMfQq8A+fCAp\nvRbYJgEYUlvGIh7Il3URxQjc/pLKl9dk7lFTo9dqJaqlfswUN4BzgsANg8uN\naWds7RiHgLmpAkbEEiUqD+ItcMwztdOcuEcmN7lNmZxDhJvqn4yR6wQsMbO2\n+QHg7XulqVvuIkS1fQew3vnmHjod2/OS++ULITt2fNq2ei/lOJDo4hGVl3jv\nEophH1IoX2b9d3XcYFBfFlD9jaYop0vLPymZewk9eCGwCxi8wT/+9KY46KFu\nMgFv\r\n=EjHG\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDCiCm75aIA5L8VDRQ0CPjw9bEQ0Rr5BvOZl1/MmBT3aAIhAKT4OSqrlluiAHTOYfVZPVoYCz//biEp75yODDnIUq4+"}]},"maintainers":[{"email":"nick.oleary@gmail.com","name":"knolleary"},{"email":"mike@mblackstock.com","name":"mblackstock"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.2.3_1562667200808_0.6428119903157834"},"_hasShrinkwrap":false},"0.2.4":{"name":"node-red-node-test-helper","version":"0.2.4","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.17.1","read-pkg-up":"7.0.1","semver":"7.3.2","should":"^13.2.3","should-sinon":"0.0.6","sinon":"9.0.2","stoppable":"1.1.0","supertest":"4.0.2"},"devDependencies":{"mocha":"~7.1.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node-red"],"engines":{"node":">=8"},"gitHead":"e8a99368af948f6f0d40deea28f80c992ef70e41","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.2.4","_nodeVersion":"10.18.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-QtsAGGCxnyF/N5KGaSJR1BjQ4Bc7gM1y8Di4ElD3U330vTIUDTFD4jUM/PLgiQxKuVqavpuup4gwF16Liw6p4A==","shasum":"c3951b702e5773c8b2b9be792059399cb854075c","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.2.4.tgz","fileCount":14,"unpackedSize":76915,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeyDB1CRA9TVsSAnZWagAA6t4P/2HI8y9V8A/QTnndzE5n\ns3Rd9/gh1uBJ+1YQdOQbf6ZPYDeyrmaAPn0ZewTeI63FDvzhQAcJj6x+aMvH\nn5DhSO2Mx23ad4vSYUhN2wv6zORgpaf9GPd2WBxTBXB2zU8aoOeL74U+IuUe\nBF0roq3aTe9mS7SsYiGaq3Ui7SmSwTi4GFGseLPHlZkSfR/PeyABgCf9TJFX\nvYmbbslgUh41qa30TiTHHYi3Xm158dgmNKnoEXwdDaEA9MwL+oMuaDKuxyX1\nho4tSAw+0bt+jQ3w7keXZ0HlZU438+f4cr5JWyTv4i9eqFGxwnTwqwgu3uUY\nfvSrGSu+6T04jIw95xqK6xjv4lrQgB9t9SkFRsGPt8vhID6qVr/bTarM51/m\nnbZS1M9Z6mR8OLhY3z7gjxelhMIRE+yrNtBAE3CG4LYcb5bG5Nj00QCY49eu\neI3YZQy6WBMo2A/kXv42BXP7J7wZQNC1QusAEfnbKlBS8VapOaTekTFLM7PT\nMRNUSNqd6Fxh4+oZqW5a9fcJW7GimPwnzLugyaQRMPrvNBt/gXTTB50FMB3E\nRs8/xL5fE7ydadmzUpeGlpUA4DYxPTBfXCI2WbHftiaBgSpQ5pLf1QIDOrBl\nk3OmWCjX6m0XonKAeBDjjU4gtkg84vKrOg58NhtZXZdfG5ccEYCj/biUIcVF\nLwSB\r\n=hEbd\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGSIJ/jRjIoU8wsl2mRUyy34lKWCFchYkQ63ChgQGAUAAiBAmqRynf0CwlZG9BHAg67wFp4YRa7bB7mZajtA/SvSgw=="}]},"maintainers":[{"email":"nick.oleary@gmail.com","name":"knolleary"},{"email":"mike@mblackstock.com","name":"mblackstock"}],"_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.2.4_1590177908760_0.7929052453910868"},"_hasShrinkwrap":false},"0.2.5":{"name":"node-red-node-test-helper","version":"0.2.5","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.17.1","body-parser":"1.19.0","read-pkg-up":"7.0.1","semver":"7.3.2","should":"^13.2.3","should-sinon":"0.0.6","sinon":"9.0.2","stoppable":"1.1.0","supertest":"4.0.2"},"devDependencies":{"mocha":"~7.1.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node-red"],"engines":{"node":">=8"},"gitHead":"9adb40d46ff286eb1e6e5608183dcdea80e84f9e","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.2.5","_nodeVersion":"10.18.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-uo9GsIOjZgf0aaUB/L1niIboWUe0oDiBba8Nkwi1cv0lp3v62cI62X47gdJ5uR3YXwjuUwCXUuVPtZf0Iw56HQ==","shasum":"5177db38af9f0eb7c20a1f1a03c1310e98681e75","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.2.5.tgz","fileCount":14,"unpackedSize":77191,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJezkwYCRA9TVsSAnZWagAAJsQP/0u9T71MrxmrAUMCaTSP\nQrOIYU6yYziqlluv9J75TkwPLxovpzZ81YrEiQft4Apzu7iXEua3IIAHGZE8\n9XFC5JU3NWrtDrCvpUDwkZ1mmPK7noPXpNQSS55Biqj0YnJWf1cYpFAXAzX8\n7gsra48UmCd6TKufDNJ2LLGsRzqxLzWs07C8rit9Hkkvu8/9ZajlEiy+D60k\nURJ35j2/in1AAE8Qpvlv475Gap8nFSFA7SxnInzjqi+jmRxchMyXUk11LjtT\nZuAP1A2s57xcCAmlv64ZAx4S5ssqa9aOSLhh0flgSIuScOm0jagvOlHS+nn1\nygfNsRPyTlkkq1YpzUNuNgYIvsnIA/B20ckX9TgqtSLqSR4xGzrid8pBjKeX\nPsxGqtIGIVoDAyPYAS1xdLr8ecKc2/5oECiOYjYzPX4SXPnQuINLQlo9FK+b\nPhWwEny8WlLzkrnnq7KcneAIjsep/lBILJ1wc226h5QJEDTldNGNvbVkdibU\nJwZmllP1IYixEtpVZGAEOYmMIlymtYsDP4SNFSxG05/c/6RVGvNPsC7KG/my\n8QTQX5IMw/QuApswTu7wnvatC/IR+fmrSiQVpeo5ZLcl3hBYiPDJ3q7o2put\nv8TBKUa62qBLGheERehGkTNvxOQnfE9e/pxRqsIOJxTl8nPR0VlM5MWmvg1p\noxCo\r\n=eALl\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCSJHiJH5fl1J+Y+91p1Kcko9a1lSnyviCjnNx9mlyYmQIhAM3l2PMWqEobgSxI4n45mEayzJKUmHLQ8cf6L3kkD3nb"}]},"maintainers":[{"email":"nick.oleary@gmail.com","name":"knolleary"},{"email":"mike@mblackstock.com","name":"mblackstock"}],"_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.2.5_1590578199806_0.25677166661590944"},"_hasShrinkwrap":false},"0.2.6":{"name":"node-red-node-test-helper","version":"0.2.6","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.17.1","body-parser":"1.19.0","read-pkg-up":"7.0.1","semver":"7.3.4","should":"^13.2.3","should-sinon":"0.0.6","sinon":"9.2.4","stoppable":"1.1.0","supertest":"4.0.2"},"devDependencies":{"mocha":"~7.1.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node-red"],"engines":{"node":">=8"},"gitHead":"0a663e1ef37282259f92441f49ce98ee63556de2","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.2.6","_nodeVersion":"10.22.1","_npmVersion":"6.14.6","dist":{"integrity":"sha512-SWKCi5jAyEQfcE67uI8+OBz7ilhY6hcmp1jOksg2qJt73zhTGv+Vfu5A3uXWxTc8cJJ4wMtgmpqqXG66I49lvQ==","shasum":"c267cbac1575928b95b1fb752148286902cf2e25","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.2.6.tgz","fileCount":14,"unpackedSize":78174,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgGG3kCRA9TVsSAnZWagAAvYcP/2pLqaTIcrLy+zH4FZyU\na+rOtVFFrPpOVCuUQmcncEOcSsZc7OPOxJ5XMZrQ4s+Cq0lw8674nh3lXEEK\nQ9wTQXBWTlGQK0uEOz6k5qF8Ieh5o+50zl2yJ79jk2bdxDB4pIqC+7JzGIQQ\nLQWq16H3mSVduvybOccLgeJ+z7OZ3OKYCd6pbK/MTZH4HZrcnqDuKhug7hA1\nkA3bhKgoDrlREUAv8sbF+S58Xf1qNWG3ZMi3+BfRJtHm44bj9tCqqFyF+VXq\nrmpjEIGpKepjjRPmaQA2n0ckjQhpXy+aXslcPFVhsUnDJEzIGdpcuC9Im/0o\ng2Iq0eW5Utdw4vyVqFREgjNGycIOqd/dt9iXGAQoi85dEvQSjmtF4ttvmoMR\nNjGVpSc3JpKe8vti7EEUvDI6BLYqODjll+XmozpEY6GkNkW3SJZHHxYluq9D\n4lhbnINXKxAHd78efp4TaQ+opDAxwKb6r1UPA+YOCMSbC3Rmff78mHcDELwj\nR34Uap3DFZAVLDX+7Ln3PIfdsxysNLwpggOuk6Y1fJs/uidMb/iHDA4LSN1o\nKofGz2/WQq6lX86RLJURsCuUNDwJwAqVEdAdaqylKk/6eHATumyxIZ9vOHP4\n7A4LRBlaPzFY3hGGqF0nMsxdos65H3h6/q6W3abTsbSDO8K+IvoHQwbpxsec\nQaIe\r\n=D9bO\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDOek15Ty3ylCwALd9GJZx4ifS5tx84IGF8E3OKcThxBAiEAwiIJpXexuArr7rETz56cLUEyFz7f/Y5cZxKS9z/yeSU="}]},"_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"directories":{},"maintainers":[{"name":"knolleary","email":"nick.oleary@gmail.com"},{"name":"mblackstock","email":"mike@mblackstock.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.2.6_1612213731998_0.8377109115350163"},"_hasShrinkwrap":false},"0.2.7":{"name":"node-red-node-test-helper","version":"0.2.7","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"express":"4.17.1","body-parser":"1.19.0","read-pkg-up":"7.0.1","semver":"7.3.4","should":"^13.2.3","should-sinon":"0.0.6","sinon":"9.2.4","stoppable":"1.1.0","supertest":"4.0.2"},"devDependencies":{"mocha":"~7.1.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node-red"],"engines":{"node":">=8"},"gitHead":"229c5fb42fe1344f91bf1d79fab755e9bb0c10d4","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.2.7","_nodeVersion":"10.22.1","_npmVersion":"6.14.6","dist":{"integrity":"sha512-OanSQ1hrsigHVtMjL/cuhtjxhTdRBXxd3IALJC9eg0WOHRF75ZI7RYhFWqqOsvQ++BwmNj8ki1S49D8cZyZTWA==","shasum":"37c08221aa3acdedaa0c7e50ee3d2a22a8f252d3","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.2.7.tgz","fileCount":14,"unpackedSize":79160,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJxoCCRA9TVsSAnZWagAAktUP/jy1gHXwCxvZYJ9u5dXM\nVbRLLfvR3QAgHVhCiS6n36bZ5B3g/LrU78S2R3+kMKmJPDg4FVlAw8a3JG2m\nz2DjneJ9yLrkmXEeWC/CUh+A8td5YouLPR6Safj3kfX4rIzfbi2zAGtAoMZO\nXJHMZs9ISVymDJs/a5F09Jb78IbdpWcLYC4FRvS5Xy33wpN0WGn+w6G6lnCn\nturhoLeVAaFBxt7LTB0XdkoOgqUT0aF6E8M3cLfphQFUdwER7TuUnq1IDk+D\nnsSutocK6mSlw431yWhBwFvdmKkczyoDMG66kTt2UPxOhV2WXSBNhBk1kVuZ\nUyvMats9mdI7psfV0epGHcdS73rzVh/YN38j0vPIztoEsCP8W20QQAvimKyw\nuGGp1mXJWXAqkgAMmq1Cd0YakiHbg+AwZSqm1gp8TfQ9Wn8WFeC9byuChtCe\n8O2bEoQTH4SvWh/q/WmOOpie+ebq7TRpnPKd74RPG/JZPm9LBL3y6V1ttF1y\n7MAKteEUuMtmXHLNORgCuDd0C06UDLPaA/mxGGXSWKC3rSimEIBfC/6pcWGz\nHvv4jRnQxs29WvXTd17FRtIGL++PwyweaboJqEEnaZq4+bTZkdV3sJY5XMBu\niJrXYWWQnwl70SXJrHdTQdqEcCv06Fn/V66zaGjlHbUaXVFwgSaAIKUHmpJt\nFjb3\r\n=ENhA\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCutrg2YicUgHpKLDFK+Mi9UtC08pqTv0qOAgiAlrW1YQIgWIHQGhvKdC9pD9CW4Q8iR9Bw2fFVX1yiAvYFXwNRetw="}]},"_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"directories":{},"maintainers":[{"name":"knolleary","email":"nick.oleary@gmail.com"},{"name":"mblackstock","email":"mike@mblackstock.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.2.7_1613175297575_0.1581966632975491"},"_hasShrinkwrap":false},"0.3.0":{"name":"node-red-node-test-helper","version":"0.3.0","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"body-parser":"1.20.0","express":"4.18.1","read-pkg-up":"7.0.1","semver":"7.3.7","should":"^13.2.3","should-sinon":"0.0.6","sinon":"11.1.2","stoppable":"1.1.0","supertest":"6.2.3"},"devDependencies":{"mocha":"9.2.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node-red"],"engines":{"node":">=14"},"gitHead":"51e35e5d7da631cdf9ae73ab67a43f2ce458a2a0","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.3.0","_nodeVersion":"16.13.1","_npmVersion":"8.1.2","dist":{"integrity":"sha512-mgeMEsRDbxmF16dQeBHEF0n944i09V4d1tMYpll83P2kxu/78Iqc6kuP9E12duqQSgWR8SOGNUqMxz9vpog1DA==","shasum":"d51f4ba20ac2e640c9e07e5243c290c89a9643d4","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.3.0.tgz","fileCount":14,"unpackedSize":83497,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEwr2ZGE5zyAYchWuxYLWvPcIE1D8oJ7edUtTL1QrKieAiEAtWxRYmHzcZr6rRcp4mG0EfnrOijMyFmArLcYLuP9Fds="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJisYOKACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmonvQ//VXZmhCyAt/M6JkdR4FiJqoebg5Oo5AsPfeoW5nBxkxtYO+tG\r\nNFt0WLm9oRnSObGD6fcSba1+Z1k0Bje6/SwEDx67g0uHyI0EAaa7gW1wblVZ\r\nwsnrIspYV7OjOUGpB/zp9I14D7dRy/rT/O/1OsSLeJcoqen03zbdUUEUriWX\r\nFy9AqLoBh8+vUSJNyrKv91eCVFt7FDWo2BCMqkpmKmHW0HVRDKsG/r3Nh0R0\r\nSzcvTt24tLVhO+RbuZYutC0iT0dVOhm4+Ind9BEWwQPbQ/AVyuwkcfvMXDc9\r\n59ZX6AW+4HOlZo6OQILOvFBF+pj7ozOJTWmsyW+VLstMXvHANYUseiafelTT\r\nOS2pjUnukhDpLnG6ULczzOryhQKFBUyl4H0AdCEjgqZJKx+vZbMH8GOtYymc\r\nvBnmFcCx6KSqqNvSMqmrU3767GHOirBg24YM1ZcUjLiGX9qmaLvD//8BviRw\r\nbY11VwSUvY8EbaQls7SNlEtqHlUo3e12kWwihQNXSkXXH8KFrgO9d4vRkD2E\r\nvXRvgVl0wbV/WQPjkvTJ0HUhmL2+qBd1B/TaXv2jy11cXdPB4qeSF/Saf1BZ\r\n1bikklXncJSA5li4FuzxOQHfluo5tn96Z/4Fmj94zp+gkcrEKKO/as0rWQYe\r\n8d/OgWOTqbymKcAlw2q5h7208KUdTkPRnCM=\r\n=2YKy\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"directories":{},"maintainers":[{"name":"knolleary","email":"nick.oleary@gmail.com"},{"name":"mblackstock","email":"mike@mblackstock.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.3.0_1655800714609_0.17224551314647285"},"_hasShrinkwrap":false},"0.3.1":{"name":"node-red-node-test-helper","version":"0.3.1","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"body-parser":"1.20.0","express":"4.18.1","read-pkg-up":"7.0.1","semver":"7.3.7","should":"^13.2.3","should-sinon":"0.0.6","sinon":"11.1.2","stoppable":"1.1.0","supertest":"6.2.3"},"devDependencies":{"mocha":"9.2.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node-red"],"engines":{"node":">=14"},"gitHead":"aa56307b08e020c210d975c1bd21a86e0d8dca1d","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.3.1","_nodeVersion":"16.17.1","_npmVersion":"8.15.0","dist":{"integrity":"sha512-/WI5YC89bDO0yTczOpc7Iytn6g8k3rqwv12XyWB0z0oJ4CC8a7qGsWYzETvcIEOxjRcEa5H8mR1exUPqnRgRIg==","shasum":"3427ff81985ee1eedb0547060773ef0ec267ce55","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.3.1.tgz","fileCount":14,"unpackedSize":83884,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDccrn86sefRisAe0BMBrK42s6PWnioMqyaQffVA1x6ZgIgArkxWTWhmiYaHP2w8GO+2pRkhs0d+0RpwW49JazY3wA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkTC+EACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmohcw//U7xvY7La8SQifCDXHHHI5On9Meoy9FYWNEqrkXx1MnbmImEg\r\nSXejX/31kAzQY/McbUMi75jl39lVmeef5JEicGuzsc4+CyoVR0OFOYGuuTps\r\nhJF1ZwmIuHgR4yAtL1qnYF/k0NdTuYuzPu5so/JZiVwjQEb9X6fw/Ut2N6KB\r\nBLeVtEdjOrJ9LGj5FO0ZYb4dotK2SJvJLEu98wwDnTgYS/IBbJ0+RqGkcref\r\nOgK2CgQ9zSz5yoocDGx8BWDH1JgNRtGG0ju7X4Hh5M/P9ETu7II+zb/oJ87p\r\n8VqVfleVWH/VRJMKI2PrGMROuFi7c5agz9KhC6+F8GOxLhPgPARMVPvXRf4c\r\nOQ8dpe/2x6XmLPAp3wldJUtEwXx/maOKyJHuWEaxIYAefSmLHWTn1PghYbYR\r\nFOU9vDdgkvLfGk+vadzy8RTmpbFzftdoE7i0MO76jCMDdjaWjLvzSgyq1x/T\r\n7TlAE5CJTEC3/rFsfCfVnqu2yZcwTH09FBJkKtKscBRyR139M4M5g9NV15MG\r\nG44q4u0kl4XuboX4m5BV6Kuechm5TtGfHccochmFauVhGuYsdBs7xMr9ZQrP\r\n1t3OJy5EthHhPck9QsdZ5y9RSDBBVxLGPGDrsK3ILfxulLqmLOMFhDpQeX1R\r\niuxUDn9rr41F07l2cTlgHcu2hp6x3zwOBE8=\r\n=epjx\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"directories":{},"maintainers":[{"name":"knolleary","email":"nick.oleary@gmail.com"},{"name":"mblackstock","email":"mike@mblackstock.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.3.1_1682714500415_0.8078881341468376"},"_hasShrinkwrap":false},"0.3.2":{"name":"node-red-node-test-helper","version":"0.3.2","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"body-parser":"1.20.0","express":"4.18.1","read-pkg-up":"7.0.1","semver":"7.3.7","should":"^13.2.3","should-sinon":"0.0.6","sinon":"11.1.2","stoppable":"1.1.0","supertest":"6.2.3"},"devDependencies":{"mocha":"9.2.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node-red"],"engines":{"node":">=14"},"gitHead":"6009463a7be62e308013d02212e0f67704057323","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.3.2","_nodeVersion":"16.17.1","_npmVersion":"8.15.0","dist":{"integrity":"sha512-Bfa6IgC1PB6KWvHwAXjMMgb7jGRryHpoDHSCo7ZaQGlHZFurgNKWxr/mPleFOqJ9Q4eyh6g+qXUgcluHbdMLcg==","shasum":"0438172b2ec28eb6b459ce1603f5b78c8fa4a041","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.3.2.tgz","fileCount":14,"unpackedSize":84005,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIG+HVN92xzvCjpftPZ3/+D3rV5UcgKWd2ou39R/AEFoJAiBV9dVyQc3nI0hDy5Y3clphxDoLoxT1pC3tMuLkX06fsg=="}]},"_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"directories":{},"maintainers":[{"name":"knolleary","email":"nick.oleary@gmail.com"},{"name":"mblackstock","email":"mike@mblackstock.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.3.2_1687479648839_0.4751311387189605"},"_hasShrinkwrap":false},"0.3.3":{"name":"node-red-node-test-helper","version":"0.3.3","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"body-parser":"^1.20.2","express":"^4.18.2","read-pkg-up":"^7.0.1","semver":"^7.5.4","should":"^13.2.3","should-sinon":"^0.0.6","sinon":"^11.1.2","stoppable":"^1.1.0","supertest":"^6.3.3"},"devDependencies":{"mocha":"^9.2.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node-red"],"engines":{"node":">=14"},"gitHead":"8d82fbf933a542e29aae288cdb9d55c4f341b49b","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_id":"node-red-node-test-helper@0.3.3","_nodeVersion":"16.20.2","_npmVersion":"8.19.4","dist":{"integrity":"sha512-kB7pFDiRS7yGVGZjSt866Lf3aEKUzXNLCG/1oFaCyaWwL0medm40dC6Q5NFkb+QZ/GLif/0AdlVUbZR0yfzchg==","shasum":"241ec1e7a34e5e1043db04462afb9e26ceb8438d","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.3.3.tgz","fileCount":14,"unpackedSize":84483,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHxccVfGKqijKhn52O1of/nSiSysBV0StbSxdDFKXqTDAiB3zKiJQzTweJeStkkVdsR7JYiGuqvn0gGZ7vSkTvGUrQ=="}]},"_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"directories":{},"maintainers":[{"name":"knolleary","email":"nick.oleary@gmail.com"},{"name":"mblackstock","email":"mike@mblackstock.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.3.3_1703257149275_0.02323255952898151"},"_hasShrinkwrap":false},"0.3.4-debug":{"name":"node-red-node-test-helper","version":"0.3.4-debug","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"body-parser":"^1.20.2","express":"^4.18.2","read-pkg-up":"^7.0.1","semver":"^7.5.4","should":"^13.2.3","should-sinon":"^0.0.6","sinon":"^11.1.2","stoppable":"^1.1.0","supertest":"^6.3.3"},"devDependencies":{"mocha":"^9.2.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node-red"],"engines":{"node":">=14"},"_id":"node-red-node-test-helper@0.3.4-debug","readme":"# Node Test Helper\n\nThis test-helper module makes the node unit test framework from the Node-RED core available for node contributors.\n\nUsing the test-helper, your tests can start the Node-RED runtime, load a test flow, and receive messages to ensure your node code is correct.\n\n## Adding to your node project dependencies\n\nNode-RED is required by the helper as a peer dependency, meaning it must be installed along with the helper itself.  To create unit tests for your node project, add this test helper and Node-RED as follows:\n\n    npm install node-red-node-test-helper node-red --save-dev\n\nThis will add the helper module to your `package.json` file:\n\n```json\n...\n  \"devDependencies\": {\n    \"node-red\":\"^0.18.4\",\n    \"node-red-node-test-helper\": \"^0.1.8\"\n  }\n...\n```\n\n## Using a local Node-RED install for tests\n\nIf you already have Node-RED installed for development, you can create a symbolic link to your local installation.  For example, if Node-RED is cloned in your `~/projects` folder use:\n\n    npm install ~/projects/node-red --no-save\n\n## Adding test script to `package.json`\n\nTo run your tests you can add a test script to your `package.json` file in the `scripts` section.  To run all of the files with the `_spec.js` prefix in the test directory for example:\n\n```json\n  ...\n  \"scripts\": {\n    \"test\": \"mocha \\\"test/**/*_spec.js\\\"\"\n  },\n  ...\n```\n\nThis will allow you to use `npm test` on the command line.\n\n## Creating unit tests\n\nWe recommend putting unit test scripts in the `test/` folder of your project and using the `*_spec.js` (for specification) suffix naming convention.\n\n## Example unit test\n\nHere is an example test for testing the lower-case node in the [Node-RED documentation](https://nodered.org/docs/creating-nodes/first-node).  Here we name our test script `test/lower-case_spec.js`.\n\n### `test/lower-case_spec.js`:\n\n```javascript\nvar should = require(\"should\");\nvar helper = require(\"node-red-node-test-helper\");\nvar lowerNode = require(\"../lower-case.js\");\n\nhelper.init(require.resolve('node-red'));\n\ndescribe('lower-case Node', function () {\n\n  beforeEach(function (done) {\n      helper.startServer(done);\n  });\n\n  afterEach(function (done) {\n      helper.unload();\n      helper.stopServer(done);\n  });\n\n  it('should be loaded', function (done) {\n    var flow = [{ id: \"n1\", type: \"lower-case\", name: \"lower-case\" }];\n    helper.load(lowerNode, flow, function () {\n      var n1 = helper.getNode(\"n1\");\n      try {\n        n1.should.have.property('name', 'lower-case');\n        done();\n      } catch(err) {\n        done(err);\n      }\n    });\n  });\n\n  it('should make payload lower case', function (done) {\n    var flow = [\n      { id: \"n1\", type: \"lower-case\", name: \"lower-case\",wires:[[\"n2\"]] },\n      { id: \"n2\", type: \"helper\" }\n    ];\n    helper.load(lowerNode, flow, function () {\n      var n2 = helper.getNode(\"n2\");\n      var n1 = helper.getNode(\"n1\");\n      n2.on(\"input\", function (msg) {\n        try {\n          msg.should.have.property('payload', 'uppercase');\n          done();\n        } catch(err) {\n          done(err);\n        }\n      });\n      n1.receive({ payload: \"UpperCase\" });\n    });\n  });\n});\n```\n\nIn this example, we require `should` for assertions, this helper module, as well as the `lower-case` node we want to test, located in the parent directory.\n\nWe then have a set of mocha unit tests.  These tests check that the node loads correctly, and ensures it makes the payload string lower case as expected.\n\nNote how the assertion failures are caught explicitly and passed to the `done()` call.  Node-RED swallows exceptions that are raised in the flow, so we make sure the test framework is aware of them.  Not doing so would simply lead to a test timeout because `done()` is never called in case of an assertion failure.\n\n## Initializing Helper\n\nTo get started, we need to tell the helper where to find the node-red runtime.  This is done by calling `helper.init(require.resolve('node-red'))` as shown.\n\nThe helper takes an optional `userSettings` parameter which is merged with the runtime defaults.\n\n```javascript\nhelper.init(require.resolve('node-red'), { \n    functionGlobalContext: { os:require('os') }\n});\n```\n\n## Getting nodes in the runtime\n\nThe asynchronous `helper.load()` method calls the supplied callback function once the Node-RED server and runtime is ready.  We can then call the `helper.getNode(id)` method to get a reference to nodes in the runtime.  For more information on these methods see the API section below.\n\n## Receiving messages from nodes\n\nThe second test uses a `helper` node in the runtime connected to the output of our `lower-case` node under test.  The `helper` node is a mock node with no functionality. By adding \"input\" event handlers as in the example, we can check the messages received by the `helper`.\n\nTo send a message into the `lower-case` node `n1` under test we call `n1.receive({ payload: \"UpperCase\" })` on that node.  We can then check that the payload is indeed lower case in the `helper` node input event handler.\n\n## Working with Spies\n\nA Spy ([docs](http://sinonjs.org/releases/v5.0.6/spies/)) helps you collect information about how many times a function was called, with what, what it returned, etc.\n\nThis helper library automatically creates spies for the following functions on `Node.prototype` (these are the same functions as mentioned in the [\"Creating Nodes\" guide](https://nodered.org/docs/creating-nodes/node-js)):\n\n- `trace()`\n- `debug()`\n- `warn()`\n- `log()`\n- `status()`\n- `send()`\n\n> **Warning:** Don't try to spy on these functions yourself with `sinon.spy()`; since they are already spies, Sinon will throw an exception!\n\n### Synchronous Example: Initialization\n\nThe `FooNode` `Node` will call `warn()` when it's initialized/constructed if `somethingGood` isn't present in the config, like so:\n\n```js\n// /path/to/foo-node.js\nmodule.exports = function FooNode (config) {\n  RED.nodes.createNode(this, config);\n\n  if (!config.somethingGood) {\n    this.warn('badness');\n  }\n}\n```\n\nYou can then assert:\n\n```js\n// /path/to/test/foo-node_spec.js\nconst FooNode = require('/path/to/foo-node');\n\nit('should warn if the `somethingGood` prop is falsy', function (done) {\n  const flow = {\n    name: 'n1',\n    somethingGood: false,\n    /* ..etc.. */\n  };\n  helper.load(FooNode, flow, function () {\n    n1.warn.should.be.calledWithExactly('badness');\n    done();\n  });\n});\n```\n\n### Synchronous Example: Input\n\nWhen it receives input, `FooNode` will immediately call `error()` if `msg.omg` is `true`:\n\n```js\n// somewhere in FooNode constructor\nthis.on('input', msg => {\n  if (msg.omg) {\n    this.error('lolwtf');\n  }\n  // ..etc..\n});\n```\n\nHere's an example of how to make that assertion:\n\n```js\ndescribe('if `omg` in input message', function () {\n  it('should call `error` with \"lolwtf\" ', function (done) {\n    const flow = {\n      name: 'n1',\n      /* ..etc.. */\n    };\n    helper.load(FooNode, flow, function () {\n      const n1 = helper.getNode('n1')\n      n1.receive({omg: true});\n      n1.on('input', () => {\n        n1.warn.should.be.calledWithExactly('lolwtf');\n        done();\n      });\n    });\n  });\n});\n```\n\n### Asynchronous Example\n\nLater in `FooNode`'s `input` listener, `warn()` may *asynchronously* be called, like so:\n\n```js\n// somewhere in FooNode constructor function\nthis.on('input', msg => {\n  if (msg.omg) {\n    this.error('lolwtf');\n  }\n  // ..etc..\n\n  Promise.resolve()\n    .then(() => {\n      if (msg.somethingBadAndWeird) {\n        this.warn('bad weirdness');\n      }\n    });\n});\n```\n\nThe strategy in the previous example used for testing behavior of `msg.omg` will *not* work!  `n1.warn.should.be.calledWithExactly('bad weirdness')` will throw an `AssertionError`, because `warn()` hasn't been called yet; `EventEmitter`s are synchronous, and the test's `input` listener is called directly after the `input` listener in `FooNode`'s function finished--but *before* the `Promise` is resolved!\n\nSince we don't know *when* exactly `warn()` will get called (short of the slow, race-condition-prone solution of using a `setTimeout` and waiting *n* milliseconds, *then* checking), we need a different way to inspect the call.  Miraculously, this helper module provides a solution.\n\nThe helper will cause the `FooNode` to asynchronously emit an event when `warn` is called (as well as the other methods in the above list).  The event name will be of the format `call:<methodName>`; in this case, `methodName` is `warn`, so the event name is `call:warn`.  The event Will pass a single argument: a Spy Call object ([docs](http://sinonjs.org/releases/v5.0.6/spy-call/)) corresponding to the latest method call.  You can then make an assertion against this Spy Call argument, like so:\n\n```js\ndescribe('if `somethingBadAndWeird` in input msg', function () {\n  it('should call \"warn\" with \"bad weirdness\" ', function (done) {\n    const flow = {\n      name: 'n1',\n      /* ..etc.. */\n    };\n    helper.load(FooNode, flow, function () {\n      const n1 = helper.getNode('n1')\n      n1.receive({somethingBadAndWeird: true});\n      // because the emit happens asynchronously, this listener\n      // will be registered before `call:warn` is emitted.\n      n1.on('call:warn', call => {\n        call.should.be.calledWithExactly('bad weirdness');\n        done();\n      });\n    });\n  });\n});\n```\n\nAs you can see, looks very similar to the synchronous solution; the only differences are the event name and assertion target.\n\n> **Note**: The \"asynchronous\" strategy will also work *if and only if* a synchronous call to the spy is *still the most recent* when we attempt to make the assertion.  This can lead to subtle bugs when refactoring, so exercise care when choosing which strategy to use.\n\n## Running your tests\n\nTo run your tests:\n\n    npm test\n\nProducing the following output (for this example):\n\n    > red-contrib-lower-case@0.1.0 test /dev/work/node-red-contrib-lower-case\n    > mocha \"test/**/*_spec.js\"\n\n    lower-case Node\n      ✓ should be loaded\n      ✓ should make payload lower case\n\n    2 passing (50ms)\n\n## Creating test flows with the editor\n\nTo create a test flow with the Node-RED editor, export the test flow to the clipboard, and then paste the flow into your unit test code.  One helpful technique to include `helper` nodes in this way is to use a `debug` node as a placeholder for a `helper` node, and then search and replace `\"type\":\"debug\"` with  `\"type\":\"helper\"` where needed.\n\n## Using `catch` and `status` nodes in test flows\n\nTo use `catch` and `status` or other nodes that depend on special handling in the runtime in your test flows, you will often need to add a `tab` to identify the flow, and associated `z` properties to your nodes to associate the nodes with the flow.  For example:\n\n```javascript\nvar flow = [{id:\"f1\", type:\"tab\", label:\"Test flow\"},\n  { id: \"n1\", z:\"f1\", type: \"lower-case\", name: \"test name\",wires:[[\"n2\"]] },\n  { id: \"n2\", z:\"f1\", type: \"helper\" }\n```\n\n## Additional examples\n\nFor additional test examples taken from the Node-RED core, see the `.js` files supplied in the `test/examples` folder and the associated test code at `test/nodes` in [the Node-RED repository](https://github.com/node-red/node-red/tree/master/test/nodes).\n\n## API\n\n> *Work in progress.*\n\n### load(testNode, testFlows, testCredentials, cb)\n\nLoads a flow then starts the flow. This function has the following arguments:\n\n* testNode: (object|array of objects) Module object of a node to be tested returned by require function. This node will be registered, and can be used in testFlows.\n* testFlow: (array of objects) Flow data to test a node. If you want to use flow data exported from Node-RED editor, export the flow to the clipboard and paste the content into your test scripts.\n* testCredentials: (object) Optional node credentials.\n* cb: (function) Function to call back when testFlows has been started  (not required when called wih `await`)\n\n### setFlows(testFlow, type, testCredentials, cb)\n\nUpdates the currently loaded flow. This function has the following arguments:\n\n* testFlow: (array of objects) Flow data to test a node. If you want to use flow data exported from Node-RED editor, export the flow to the clipboard and paste the content into your test scripts.\n* type: (string) Flow data to test a node. If you want to use flow data exported from Node-RED editor, export the flow to the clipboard and paste the content into your test scripts.\n* testCredentials: (object) Optional node credentials.\n* cb: (function) Function to call back when testFlows has been loaded (not required when called wih `await`)\n\n#### Example\n\n```js\n  it('should modify the flow then lower case of payload', async function () {\n      const flow = [\n            { id: \"n2\", type: \"helper\" }\n      ]\n      await helper.load(lowerNode, flow)\n      const newFlow = [...flow]\n      newFlow.push( { id: \"n1\", type: \"lower-case\", name: \"lower-case\", wires:[['n2']] },)\n      await helper.setFlows(newFlow, \"nodes\") //update flows\n      const n1 = helper.getNode('n1')\n      n1.should.have.a.property('name', 'lower-case')\n      await new Promise((resolve, reject) => {\n        const n2 = helper.getNode('n2')\n        n2.on('input', function (msg) {\n            try {\n                msg.should.have.property('payload', 'hello');\n                resolve()\n            } catch (err) {\n                reject(err);\n            }\n        });\n        n1.receive({ payload: 'HELLO' });\n      });\n  });\n```\n\n### unload()\n\nReturn promise to stop all flows, clean up test runtime.\n\n### getNode(id)\n\nReturns a node instance by id in the testFlow. Any node that is defined in testFlows can be retrieved, including any helper node added to the flow.\n\n### clearFlows()\n\nStop all flows.\n\n### request()\n\nCreate http ([supertest](https://www.npmjs.com/package/supertest)) request to the editor/admin url.\n\nExample:\n\n```javascript\nhelper.request().post('/inject/invalid').expect(404).end(done);\n```\n\n### settings(userSettings)\n\nMerges any userSettings with the defaults returned by `RED.settings`. Each invocation of this method will overwrite the previous userSettings to prevent unexpected problems in your tests.\n\nThis will enable you to replicate your production environment within your tests, for example where you're using the `functionGlobalContext` to enable extra node modules within your functions.\n\n```javascript\n// functions can now access os via global.get('os')\nhelper.settings({ functionGlobalContext: { os:require('os') } });\n\n// reset back to defaults\nhelper.settings({ });\n```\n\n### startServer(done)\n\nStarts a Node-RED server for testing nodes that depend on http or web sockets endpoints like the debug node.\nTo start a Node-RED server before all test cases:\n\n```javascript\nbefore(function(done) {\n    helper.startServer(done);\n});\n```\n\n### stopServer(done)\n\nStop server.  Generally called after unload() complete.  For example, to unload a flow then stop a server after each test:\n\n```javascript\nafterEach(function(done) {\n    helper.unload().then(function() {\n        helper.stopServer(done);\n    });\n});\n```\n\n### url()\n\nReturn the URL of the helper server including the ephemeral port used when starting the server.\n\n### log()\n\nReturn a spy on the logs to look for events from the node under test.  For example:\n\n```javascript\nvar logEvents = helper.log().args.filter(function(event) {\n    return event[0].type == \"batch\";\n});\n```\n\n## Running helper examples\n\n    npm run examples\n\nThis runs tests on an included lower-case node (as above) as well as snaphots of some of the core nodes' Javascript files to ensure the helper is working as expected.\n","readmeFilename":"README.md","gitHead":"8d82fbf933a542e29aae288cdb9d55c4f341b49b","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_nodeVersion":"18.18.2","_npmVersion":"9.8.1","dist":{"integrity":"sha512-6B1tx95YX4vxEMyu+pKH9AmQaJKESY2brGaHxVlklirgoF3eLYMKNo8Nxf8Bu3z12nDWZQ9ETIDXzPfAfiDkvA==","shasum":"f6f2547a3248316e80d3a5150a5924e5dcdd963d","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.3.4-debug.tgz","fileCount":14,"unpackedSize":85323,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDZMW1hkwQFOK2H6hq9Ag5/r/Q7XZ6G7vPsEFANtGvZ5AiEA6TiYDbxZU0+rdiIrA85evQj38TlPGeqioLmh6rbgkAE="}]},"_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"directories":{},"maintainers":[{"name":"knolleary","email":"nick.oleary@gmail.com"},{"name":"mblackstock","email":"mike@mblackstock.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.3.4-debug_1711052438258_0.543754204791316"},"_hasShrinkwrap":false},"0.3.4":{"name":"node-red-node-test-helper","version":"0.3.4","description":"A test framework for Node-RED nodes","main":"index.js","scripts":{"test":"mocha \"test/**/*_spec.js\"","examples":"mocha \"examples/**/*_spec.js\""},"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"dependencies":{"body-parser":"^1.20.2","express":"^4.19.2","semver":"^7.5.4","should":"^13.2.3","should-sinon":"^0.0.6","sinon":"^11.1.2","stoppable":"^1.1.0","supertest":"^7.0.0"},"devDependencies":{"mocha":"^9.2.2"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"keywords":["test","iot","node-red"],"engines":{"node":">=14"},"_id":"node-red-node-test-helper@0.3.4","gitHead":"fc1d059189dd5fbce8c05b311159ccde760ad756","bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"homepage":"https://github.com/node-red/node-red-node-test-helper#readme","_nodeVersion":"18.18.2","_npmVersion":"9.8.1","dist":{"integrity":"sha512-OFXGEkKZpLkgoijAgpUIjzn5RF8QnbwPX9RjfI2LWXq1ACfeXkXcW0i1ioiphrokdE3MiWQJtH5omLNnSNdyaQ==","shasum":"d37d2226afd88d3a646a443e8e856852b7cc66f6","tarball":"https://registry.npmjs.org/node-red-node-test-helper/-/node-red-node-test-helper-0.3.4.tgz","fileCount":14,"unpackedSize":84996,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIChvCiOSdtA+UH2Ocrptwad+ZI17ngu2jRuXEXttZ0b0AiA9wCbKI7IJKyPm1XhmgsVl5C7k0AdGhPfdSXAgLKPgyA=="}]},"_npmUser":{"name":"knolleary","email":"nick.oleary@gmail.com"},"directories":{},"maintainers":[{"name":"knolleary","email":"nick.oleary@gmail.com"},{"name":"mblackstock","email":"mike@mblackstock.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-red-node-test-helper_0.3.4_1714734140925_0.6666406787014876"},"_hasShrinkwrap":false}},"maintainers":[{"name":"knolleary","email":"nick.oleary@gmail.com"},{"name":"mblackstock","email":"mike@mblackstock.com"}],"description":"A test framework for Node-RED nodes","homepage":"https://github.com/node-red/node-red-node-test-helper#readme","keywords":["test","iot","node-red"],"repository":{"type":"git","url":"git+https://github.com/node-red/node-red-node-test-helper.git"},"contributors":[{"name":"Nick O'Leary"},{"name":"Dave Conway-Jones"},{"name":"Mike Blackstock"},{"name":"Dean Cording"}],"bugs":{"url":"https://github.com/node-red/node-red-node-test-helper/issues"},"license":"Apache-2.0","readme":"# Node Test Helper\n\nThis test-helper module makes the node unit test framework from the Node-RED core available for node contributors.\n\nUsing the test-helper, your tests can start the Node-RED runtime, load a test flow, and receive messages to ensure your node code is correct.\n\n## Adding to your node project dependencies\n\nNode-RED is required by the helper as a peer dependency, meaning it must be installed along with the helper itself.  To create unit tests for your node project, add this test helper and Node-RED as follows:\n\n    npm install node-red-node-test-helper node-red --save-dev\n\nThis will add the helper module to your `package.json` file:\n\n```json\n...\n  \"devDependencies\": {\n    \"node-red\":\"^0.18.4\",\n    \"node-red-node-test-helper\": \"^0.1.8\"\n  }\n...\n```\n\n## Using a local Node-RED install for tests\n\nIf you already have Node-RED installed for development, you can create a symbolic link to your local installation.  For example, if Node-RED is cloned in your `~/projects` folder use:\n\n    npm install ~/projects/node-red --no-save\n\n## Adding test script to `package.json`\n\nTo run your tests you can add a test script to your `package.json` file in the `scripts` section.  To run all of the files with the `_spec.js` prefix in the test directory for example:\n\n```json\n  ...\n  \"scripts\": {\n    \"test\": \"mocha \\\"test/**/*_spec.js\\\"\"\n  },\n  ...\n```\n\nThis will allow you to use `npm test` on the command line.\n\n## Creating unit tests\n\nWe recommend putting unit test scripts in the `test/` folder of your project and using the `*_spec.js` (for specification) suffix naming convention.\n\n## Example unit test\n\nHere is an example test for testing the lower-case node in the [Node-RED documentation](https://nodered.org/docs/creating-nodes/first-node).  Here we name our test script `test/lower-case_spec.js`.\n\n### `test/lower-case_spec.js`:\n\n```javascript\nvar should = require(\"should\");\nvar helper = require(\"node-red-node-test-helper\");\nvar lowerNode = require(\"../lower-case.js\");\n\nhelper.init(require.resolve('node-red'));\n\ndescribe('lower-case Node', function () {\n\n  beforeEach(function (done) {\n      helper.startServer(done);\n  });\n\n  afterEach(function (done) {\n      helper.unload();\n      helper.stopServer(done);\n  });\n\n  it('should be loaded', function (done) {\n    var flow = [{ id: \"n1\", type: \"lower-case\", name: \"lower-case\" }];\n    helper.load(lowerNode, flow, function () {\n      var n1 = helper.getNode(\"n1\");\n      try {\n        n1.should.have.property('name', 'lower-case');\n        done();\n      } catch(err) {\n        done(err);\n      }\n    });\n  });\n\n  it('should make payload lower case', function (done) {\n    var flow = [\n      { id: \"n1\", type: \"lower-case\", name: \"lower-case\",wires:[[\"n2\"]] },\n      { id: \"n2\", type: \"helper\" }\n    ];\n    helper.load(lowerNode, flow, function () {\n      var n2 = helper.getNode(\"n2\");\n      var n1 = helper.getNode(\"n1\");\n      n2.on(\"input\", function (msg) {\n        try {\n          msg.should.have.property('payload', 'uppercase');\n          done();\n        } catch(err) {\n          done(err);\n        }\n      });\n      n1.receive({ payload: \"UpperCase\" });\n    });\n  });\n});\n```\n\nIn this example, we require `should` for assertions, this helper module, as well as the `lower-case` node we want to test, located in the parent directory.\n\nWe then have a set of mocha unit tests.  These tests check that the node loads correctly, and ensures it makes the payload string lower case as expected.\n\nNote how the assertion failures are caught explicitly and passed to the `done()` call.  Node-RED swallows exceptions that are raised in the flow, so we make sure the test framework is aware of them.  Not doing so would simply lead to a test timeout because `done()` is never called in case of an assertion failure.\n\n## Initializing Helper\n\nTo get started, we need to tell the helper where to find the node-red runtime.  This is done by calling `helper.init(require.resolve('node-red'))` as shown.\n\nThe helper takes an optional `userSettings` parameter which is merged with the runtime defaults.\n\n```javascript\nhelper.init(require.resolve('node-red'), { \n    functionGlobalContext: { os:require('os') }\n});\n```\n\n## Getting nodes in the runtime\n\nThe asynchronous `helper.load()` method calls the supplied callback function once the Node-RED server and runtime is ready.  We can then call the `helper.getNode(id)` method to get a reference to nodes in the runtime.  For more information on these methods see the API section below.\n\n## Receiving messages from nodes\n\nThe second test uses a `helper` node in the runtime connected to the output of our `lower-case` node under test.  The `helper` node is a mock node with no functionality. By adding \"input\" event handlers as in the example, we can check the messages received by the `helper`.\n\nTo send a message into the `lower-case` node `n1` under test we call `n1.receive({ payload: \"UpperCase\" })` on that node.  We can then check that the payload is indeed lower case in the `helper` node input event handler.\n\n## Working with Spies\n\nA Spy ([docs](http://sinonjs.org/releases/v5.0.6/spies/)) helps you collect information about how many times a function was called, with what, what it returned, etc.\n\nThis helper library automatically creates spies for the following functions on `Node.prototype` (these are the same functions as mentioned in the [\"Creating Nodes\" guide](https://nodered.org/docs/creating-nodes/node-js)):\n\n- `trace()`\n- `debug()`\n- `warn()`\n- `log()`\n- `status()`\n- `send()`\n\n> **Warning:** Don't try to spy on these functions yourself with `sinon.spy()`; since they are already spies, Sinon will throw an exception!\n\n### Synchronous Example: Initialization\n\nThe `FooNode` `Node` will call `warn()` when it's initialized/constructed if `somethingGood` isn't present in the config, like so:\n\n```js\n// /path/to/foo-node.js\nmodule.exports = function FooNode (config) {\n  RED.nodes.createNode(this, config);\n\n  if (!config.somethingGood) {\n    this.warn('badness');\n  }\n}\n```\n\nYou can then assert:\n\n```js\n// /path/to/test/foo-node_spec.js\nconst FooNode = require('/path/to/foo-node');\n\nit('should warn if the `somethingGood` prop is falsy', function (done) {\n  const flow = {\n    name: 'n1',\n    somethingGood: false,\n    /* ..etc.. */\n  };\n  helper.load(FooNode, flow, function () {\n    n1.warn.should.be.calledWithExactly('badness');\n    done();\n  });\n});\n```\n\n### Synchronous Example: Input\n\nWhen it receives input, `FooNode` will immediately call `error()` if `msg.omg` is `true`:\n\n```js\n// somewhere in FooNode constructor\nthis.on('input', msg => {\n  if (msg.omg) {\n    this.error('lolwtf');\n  }\n  // ..etc..\n});\n```\n\nHere's an example of how to make that assertion:\n\n```js\ndescribe('if `omg` in input message', function () {\n  it('should call `error` with \"lolwtf\" ', function (done) {\n    const flow = {\n      name: 'n1',\n      /* ..etc.. */\n    };\n    helper.load(FooNode, flow, function () {\n      const n1 = helper.getNode('n1')\n      n1.receive({omg: true});\n      n1.on('input', () => {\n        n1.warn.should.be.calledWithExactly('lolwtf');\n        done();\n      });\n    });\n  });\n});\n```\n\n### Asynchronous Example\n\nLater in `FooNode`'s `input` listener, `warn()` may *asynchronously* be called, like so:\n\n```js\n// somewhere in FooNode constructor function\nthis.on('input', msg => {\n  if (msg.omg) {\n    this.error('lolwtf');\n  }\n  // ..etc..\n\n  Promise.resolve()\n    .then(() => {\n      if (msg.somethingBadAndWeird) {\n        this.warn('bad weirdness');\n      }\n    });\n});\n```\n\nThe strategy in the previous example used for testing behavior of `msg.omg` will *not* work!  `n1.warn.should.be.calledWithExactly('bad weirdness')` will throw an `AssertionError`, because `warn()` hasn't been called yet; `EventEmitter`s are synchronous, and the test's `input` listener is called directly after the `input` listener in `FooNode`'s function finished--but *before* the `Promise` is resolved!\n\nSince we don't know *when* exactly `warn()` will get called (short of the slow, race-condition-prone solution of using a `setTimeout` and waiting *n* milliseconds, *then* checking), we need a different way to inspect the call.  Miraculously, this helper module provides a solution.\n\nThe helper will cause the `FooNode` to asynchronously emit an event when `warn` is called (as well as the other methods in the above list).  The event name will be of the format `call:<methodName>`; in this case, `methodName` is `warn`, so the event name is `call:warn`.  The event Will pass a single argument: a Spy Call object ([docs](http://sinonjs.org/releases/v5.0.6/spy-call/)) corresponding to the latest method call.  You can then make an assertion against this Spy Call argument, like so:\n\n```js\ndescribe('if `somethingBadAndWeird` in input msg', function () {\n  it('should call \"warn\" with \"bad weirdness\" ', function (done) {\n    const flow = {\n      name: 'n1',\n      /* ..etc.. */\n    };\n    helper.load(FooNode, flow, function () {\n      const n1 = helper.getNode('n1')\n      n1.receive({somethingBadAndWeird: true});\n      // because the emit happens asynchronously, this listener\n      // will be registered before `call:warn` is emitted.\n      n1.on('call:warn', call => {\n        call.should.be.calledWithExactly('bad weirdness');\n        done();\n      });\n    });\n  });\n});\n```\n\nAs you can see, looks very similar to the synchronous solution; the only differences are the event name and assertion target.\n\n> **Note**: The \"asynchronous\" strategy will also work *if and only if* a synchronous call to the spy is *still the most recent* when we attempt to make the assertion.  This can lead to subtle bugs when refactoring, so exercise care when choosing which strategy to use.\n\n## Running your tests\n\nTo run your tests:\n\n    npm test\n\nProducing the following output (for this example):\n\n    > red-contrib-lower-case@0.1.0 test /dev/work/node-red-contrib-lower-case\n    > mocha \"test/**/*_spec.js\"\n\n    lower-case Node\n      ✓ should be loaded\n      ✓ should make payload lower case\n\n    2 passing (50ms)\n\n## Creating test flows with the editor\n\nTo create a test flow with the Node-RED editor, export the test flow to the clipboard, and then paste the flow into your unit test code.  One helpful technique to include `helper` nodes in this way is to use a `debug` node as a placeholder for a `helper` node, and then search and replace `\"type\":\"debug\"` with  `\"type\":\"helper\"` where needed.\n\n## Using `catch` and `status` nodes in test flows\n\nTo use `catch` and `status` or other nodes that depend on special handling in the runtime in your test flows, you will often need to add a `tab` to identify the flow, and associated `z` properties to your nodes to associate the nodes with the flow.  For example:\n\n```javascript\nvar flow = [{id:\"f1\", type:\"tab\", label:\"Test flow\"},\n  { id: \"n1\", z:\"f1\", type: \"lower-case\", name: \"test name\",wires:[[\"n2\"]] },\n  { id: \"n2\", z:\"f1\", type: \"helper\" }\n```\n\n## Additional examples\n\nFor additional test examples taken from the Node-RED core, see the `.js` files supplied in the `test/examples` folder and the associated test code at `test/nodes` in [the Node-RED repository](https://github.com/node-red/node-red/tree/master/test/nodes).\n\n## API\n\n> *Work in progress.*\n\n### load(testNode, testFlows, testCredentials, cb)\n\nLoads a flow then starts the flow. This function has the following arguments:\n\n* testNode: (object|array of objects) Module object of a node to be tested returned by require function. This node will be registered, and can be used in testFlows.\n* testFlow: (array of objects) Flow data to test a node. If you want to use flow data exported from Node-RED editor, export the flow to the clipboard and paste the content into your test scripts.\n* testCredentials: (object) Optional node credentials.\n* cb: (function) Function to call back when testFlows has been started  (not required when called wih `await`)\n\n### setFlows(testFlow, type, testCredentials, cb)\n\nUpdates the currently loaded flow. This function has the following arguments:\n\n* testFlow: (array of objects) Flow data to test a node. If you want to use flow data exported from Node-RED editor, export the flow to the clipboard and paste the content into your test scripts.\n* type: (string) Flow data to test a node. If you want to use flow data exported from Node-RED editor, export the flow to the clipboard and paste the content into your test scripts.\n* testCredentials: (object) Optional node credentials.\n* cb: (function) Function to call back when testFlows has been loaded (not required when called wih `await`)\n\n#### Example\n\n```js\n  it('should modify the flow then lower case of payload', async function () {\n      const flow = [\n            { id: \"n2\", type: \"helper\" }\n      ]\n      await helper.load(lowerNode, flow)\n      const newFlow = [...flow]\n      newFlow.push( { id: \"n1\", type: \"lower-case\", name: \"lower-case\", wires:[['n2']] },)\n      await helper.setFlows(newFlow, \"nodes\") //update flows\n      const n1 = helper.getNode('n1')\n      n1.should.have.a.property('name', 'lower-case')\n      await new Promise((resolve, reject) => {\n        const n2 = helper.getNode('n2')\n        n2.on('input', function (msg) {\n            try {\n                msg.should.have.property('payload', 'hello');\n                resolve()\n            } catch (err) {\n                reject(err);\n            }\n        });\n        n1.receive({ payload: 'HELLO' });\n      });\n  });\n```\n\n### unload()\n\nReturn promise to stop all flows, clean up test runtime.\n\n### getNode(id)\n\nReturns a node instance by id in the testFlow. Any node that is defined in testFlows can be retrieved, including any helper node added to the flow.\n\n### clearFlows()\n\nStop all flows.\n\n### request()\n\nCreate http ([supertest](https://www.npmjs.com/package/supertest)) request to the editor/admin url.\n\nExample:\n\n```javascript\nhelper.request().post('/inject/invalid').expect(404).end(done);\n```\n\n### settings(userSettings)\n\nMerges any userSettings with the defaults returned by `RED.settings`. Each invocation of this method will overwrite the previous userSettings to prevent unexpected problems in your tests.\n\nThis will enable you to replicate your production environment within your tests, for example where you're using the `functionGlobalContext` to enable extra node modules within your functions.\n\n```javascript\n// functions can now access os via global.get('os')\nhelper.settings({ functionGlobalContext: { os:require('os') } });\n\n// reset back to defaults\nhelper.settings({ });\n```\n\n### startServer(done)\n\nStarts a Node-RED server for testing nodes that depend on http or web sockets endpoints like the debug node.\nTo start a Node-RED server before all test cases:\n\n```javascript\nbefore(function(done) {\n    helper.startServer(done);\n});\n```\n\n### stopServer(done)\n\nStop server.  Generally called after unload() complete.  For example, to unload a flow then stop a server after each test:\n\n```javascript\nafterEach(function(done) {\n    helper.unload().then(function() {\n        helper.stopServer(done);\n    });\n});\n```\n\n### url()\n\nReturn the URL of the helper server including the ephemeral port used when starting the server.\n\n### log()\n\nReturn a spy on the logs to look for events from the node under test.  For example:\n\n```javascript\nvar logEvents = helper.log().args.filter(function(event) {\n    return event[0].type == \"batch\";\n});\n```\n\n## Running helper examples\n\n    npm run examples\n\nThis runs tests on an included lower-case node (as above) as well as snaphots of some of the core nodes' Javascript files to ensure the helper is working as expected.\n","readmeFilename":"README.md"}